name: Nightly Tests

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  extended-browser-tests:
    name: Extended Browser Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox]
        headless: [true, false]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            wget \
            gnupg \
            software-properties-common \
            apt-transport-https \
            ca-certificates \
            xvfb

      - name: Install Chrome
        if: matrix.browser == 'chrome'
        run: |
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Firefox
        if: matrix.browser == 'firefox'
        run: |
          sudo apt-get install -y firefox

      - name: Setup display for non-headless tests
        if: matrix.headless == false
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          sleep 3

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install selenium[firefox] # For Firefox support

      - name: Run comprehensive browser tests
        env:
          DISPLAY: ${{ matrix.headless == false && ':99' || '' }}
          BROWSER: ${{ matrix.browser }}
          HEADLESS: ${{ matrix.headless }}
        run: |
          # Run extended test suite including slow tests
          pytest tests/test_browseruse_service.py -v \
            -m "slow or not slow" \
            --tb=long \
            --maxfail=3

      - name: Run observe function stress test
        env:
          DISPLAY: ${{ matrix.headless == false && ':99' || '' }}
          BROWSER: ${{ matrix.browser }}
          HEADLESS: ${{ matrix.headless }}
        run: |
          python .github/scripts/stress_test.py

  performance-benchmarks:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install pytest-benchmark

      - name: Install Chrome
        run: |
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Run performance benchmarks
        run: |
          python .github/scripts/performance_benchmark.py

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install safety pip-audit

      - name: Check for known vulnerabilities with Safety
        run: safety check --json --output safety-report.json
        continue-on-error: true

      - name: Audit dependencies with pip-audit
        run: pip-audit --format=json --output=pip-audit-report.json
        continue-on-error: true

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: nightly-security-reports
          path: |
            safety-report.json
            pip-audit-report.json